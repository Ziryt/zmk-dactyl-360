#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
        colemak_switch: eng_colemak_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_1)) &to 0>;
            label = "ENG_COLEMAK_SWITCH";
        };

        ru_switch: ru_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_2)) &to 1>;
            label = " RU_SWITCH";
        };

        ua_switch: ua_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_3)) &to 1>;
            label = "UA_SWITCH";
        };

        win_sleep: win_sleep {
            wait-ms = <50>;
            tap-ms = <5>;
            compatible = "zmk,behavior-macro";
            label = "WIN_SLEEP_KEY";
            #binding-cells = <0>;
            bindings = <&kp LG(X) &kp U &kp S>;
        };
    };

    behaviors {
        sleep_behavior: sleep_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "SLEEP_BEHAVIOR";
            bindings = <&win_sleep>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <500>;
        };

        D_bhv: D_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "D_BHV";
            bindings = <&kp D>, <&kp LC(V)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        T_bhv: T_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "T_BHV";
            bindings = <&kp T>, <&kp LC(F)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        R_bhv: R_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "R_BHV";
            bindings = <&kp R>, <&kp LC(S)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        S_bhv: S_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "S_BHV";
            bindings = <&kp S>, <&kp LC(D)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        P_bhv: P_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "P_BHV";
            bindings = <&kp P>, <&kp LC(R)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        B_bhv: B_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "B_BHV";
            bindings = <&kp B>, <&kp LC(T)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        V_bhv: V_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "V_BHV";
            bindings = <&kp V>, <&kp LC(B)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        F_bhv: F_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "F_BHV";
            bindings = <&kp F>, <&kp LC(E)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        K_bhv: K_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "K_BHV";
            bindings = <&kp K>, <&kp LC(N)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        M_bhv: M_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "M_BHV";
            bindings = <&kp M>, <&kp LC(H)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        J_bhv: J_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "J_BHV";
            bindings = <&kp J>, <&kp LC(Y)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        H_bhv: H_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "H_BHV";
            bindings = <&kp H>, <&kp LC(M)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        N_bhv: N_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "N_BHV";
            bindings = <&kp N>, <&kp LC(J)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        L_bhv: L_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "L_BHV";
            bindings = <&kp L>, <&kp LC(U)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        E_bhv: E_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "E_BHV";
            bindings = <&kp E>, <&kp LC(K)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        U_bhv: U_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "U_BHV";
            bindings = <&kp U>, <&kp LC(I)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        I_bhv: I_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "I_BHV";
            bindings = <&kp I>, <&kp LC(L)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        Y_bhv: Y_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "Y_BHV";
            bindings = <&kp Y>, <&kp LC(O)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        O_bhv: O_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "O_BHV";
            bindings = <&kp O>, <&kp LC(SEMICOLON)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        semcol_bhv: semcol_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMCOL_BHV";
            bindings = <&kp SEMICOLON>, <&kp LC(P)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL       &kp N1     &kp N2        &kp N3    &kp N4     &kp N5  &tog 1                                                                          &mo 3        &kp N6  &kp N7        &kp N8          &kp N9            &kp N0    &kp MINUS
&kp TAB         &kp Q      &kp W         &kp E     &kp R      &kp T   &kp LC(V)                                                                       &none        &kp Y   &kp U         &kp I           &kp O             &kp P     &kp BSLH
&kp ESC         &kp A      &kp S         &kp D     &kp F      &kp G   &kp LC(C)                                                                       &kp LA(TAB)  &kp H   &kp J         &kp K           &kp L             &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z      &kp X         &kp C     &kp V      &kp B                                                                                                &kp N   &kp M         &kp COMMA       &kp DOT           &kp FSLH  &kp RSHFT
&tog 2          &kp GRAVE  &kp CAPSLOCK  &kp LEFT  &kp RIGHT                                                                                                               &kp UP_ARROW  &kp DOWN_ARROW  &kp LEFT_BRACKET  &kp RBKT  &mo 2
                                                                                                &kp LCTRL   &kp LALT     &kp RIGHT_WIN     &kp RCTRL
                                                                                                            &kp PG_UP    &kp C_PLAY_PAUSE
                                                                                 &kp BACKSPACE  &kp DELETE  &kp PG_DN    &kp C_NEXT        &kp ENTER  &kp SPACE
            >;
        };

        keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans           &trans  &kp KP_NUMLOCK  &kp KP_EQUAL  &kp KP_SLASH  &kp KP_ASTERISK  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans           &trans  &kp KP_N7       &kp KP_N8     &kp KP_N9     &kp KP_MINUS     &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans           &trans  &kp KP_N4       &kp KP_N5     &kp KP_N6     &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                                     &trans  &kp KP_N1       &kp KP_N2     &kp KP_N3     &kp KP_ENTER     &trans
&none   &trans  &trans  &trans  &trans                                                                                     &trans          &trans        &kp KP_DOT    &kp KP_ENTER     &none
                                                                &trans  &trans    &trans  &trans
                                                                        &trans    &trans
                                                        &trans  &trans  &trans    &trans  &trans  &kp KP_NUMBER_0
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                                  &mo 3            &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                                   &kp C_VOLUME_UP  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none                                                   &kp C_VOL_DN     &trans  &trans  &trans  &none    &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                                           &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans                                                                                           &trans  &trans  &trans   &trans   &trans
                                                                &trans  &trans      &trans      &trans
                                                                        &kp HOME    &trans
                                                        &trans  &trans  &kp END     &kp C_PREV  &trans  &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                      &trans       &none  &none       &none  &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                                                &bootloader  &none  &none       &none  &none  &none  &none
&none  &none         &none         &none         &none         &none         &none                                                                      &none        &none  &bt BT_CLR  &none  &none  &none  &none
&none  &none         &none         &none         &none         &none                                                                                                 &none  &none       &none  &none  &none  &none
&none  &none         &none         &none         &none                                                                                                                      &none       &none  &none  &none  &none
                                                                                                           &none       &none         &none       &none
                                                                                                                       &none         &bl BL_TOG
                                                                                          &rgb_ug RGB_TOG  &bl BL_INC  &bl BL_DEC    &none       &none  &none
            >;
        };
    };
};
