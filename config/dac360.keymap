#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    macros {
        colemak_switch: eng_colemak_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_1)) &to 0>;
            label = "ENG_COLEMAK_SWITCH";
        };

        ru_switch: ru_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_2)) &to 1>;
            label = " RU_SWITCH";
        };

        ua_switch: ua_switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(NUMBER_3)) &to 1>;
            label = "UA_SWITCH";
        };

        win_sleep: win_sleep {
            wait-ms = <50>;
            tap-ms = <5>;
            compatible = "zmk,behavior-macro";
            label = "WIN_SLEEP_KEY";
            #binding-cells = <0>;
            bindings = <&kp LG(X) &kp U &kp S>;
        };
    };

    behaviors {
        sleep_behavior: sleep_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "SLEEP_BEHAVIOR";
            bindings = <&win_sleep>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <500>;
        };

        D_bhv: D_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "D_BHV";
            bindings = <&kp D>, <&kp LC(V)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        T_bhv: T_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "T_BHV";
            bindings = <&kp T>, <&kp LC(F)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        R_bhv: R_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "R_BHV";
            bindings = <&kp R>, <&kp LC(S)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        S_bhv: S_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "S_BHV";
            bindings = <&kp S>, <&kp LC(D)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        P_bhv: P_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "P_BHV";
            bindings = <&kp P>, <&kp LC(R)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        B_bhv: B_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "B_BHV";
            bindings = <&kp B>, <&kp LC(T)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        V_bhv: V_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "V_BHV";
            bindings = <&kp V>, <&kp LC(B)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        F_bhv: F_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "F_BHV";
            bindings = <&kp F>, <&kp LC(E)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        K_bhv: K_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "K_BHV";
            bindings = <&kp K>, <&kp LC(N)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        M_bhv: M_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "M_BHV";
            bindings = <&kp M>, <&kp LC(H)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        J_bhv: J_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "J_BHV";
            bindings = <&kp J>, <&kp LC(Y)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        H_bhv: H_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "H_BHV";
            bindings = <&kp H>, <&kp LC(M)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        N_bhv: N_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "N_BHV";
            bindings = <&kp N>, <&kp LC(J)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        L_bhv: L_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "L_BHV";
            bindings = <&kp L>, <&kp LC(U)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        E_bhv: E_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "E_BHV";
            bindings = <&kp E>, <&kp LC(K)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        U_bhv: U_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "U_BHV";
            bindings = <&kp U>, <&kp LC(I)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        I_bhv: I_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "I_BHV";
            bindings = <&kp I>, <&kp LC(L)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        Y_bhv: Y_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "Y_BHV";
            bindings = <&kp Y>, <&kp LC(O)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        O_bhv: O_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "O_BHV";
            bindings = <&kp O>, <&kp LC(SEMICOLON)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        semcol_bhv: semcol_bhv {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMCOL_BHV";
            bindings = <&kp SEMICOLON>, <&kp LC(P)>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
&kp UNDERSCORE  &kp N1    &kp N2  &kp N3  &kp N4  &kp N5  &none                                                        &none        &kp N6  &kp N7  &kp N8     &kp N9    &kp N0       &kp PAGE_UP
&kp TAB         &kp Q     &kp W   &F_bhv  &P_bhv  &B_bhv  &kp LC(V)                                                    &none        &J_bhv  &L_bhv  &U_bhv     &Y_bhv    &semcol_bhv  &kp PAGE_DOWN
&kp ESC         &kp A     &R_bhv  &S_bhv  &T_bhv  &kp G   &kp LC(C)                                                    &kp LA(TAB)  &M_bhv  &N_bhv  &E_bhv     &I_bhv    &O_bhv       &kp SQT
&kp LCTRL       &kp Z     &kp X   &kp C   &D_bhv  &V_bhv                                                                            &K_bhv  &H_bhv  &kp COMMA  &kp DOT   &kp FSLH     &kp QUESTION
&tog 7          &kp DOWN  &kp UP  &none   &mo 4                                                                                             &mo 5   &kp HOME   &kp LEFT  &kp RIGHT    &kp END
                                                                              &kp LALT   &none        &none  &kp DEL
                                                                                         &kp LGUI     &mo 6
                                                                     &kp RET  &kp SPACE  &kp LSHFT    &mo 3  &kp BSPC  &kp RSHFT
            >;

            label = "def";
        };

        qwe {
            bindings = <
&kp UNDER  &kp N1    &kp N2  &kp N3  &kp N4  &kp N5  &none                                                        &none        &kp N6  &kp N7  &kp N8         &kp N9       &kp N0        &kp PG_UP
&kp TAB    &kp Q     &kp W   &kp E   &kp R   &kp T   &kp LC(V)                                                    &none        &kp Y   &kp U   &kp I          &kp O        &kp P         &kp LA(LBKT)
&kp ESC    &kp A     &kp S   &kp D   &kp F   &kp G   &kp LC(C)                                                    &kp LA(TAB)  &kp H   &kp J   &kp K          &kp L        &kp LA(SEMI)  &kp LA(SQT)
&kp LCTRL  &kp Z     &kp X   &kp C   &kp V   &kp B                                                                             &kp N   &kp M   &kp RA(COMMA)  &kp LA(DOT)  &kp DOT       &kp QUESTION
&mo 7      &kp DOWN  &kp UP  &none   &mo 4                                                                                             &mo 5   &kp HOME       &kp LEFT     &kp RIGHT     &kp END
                                                                         &kp LALT   &none        &none  &kp DEL
                                                                                    &kp LGUI     &mo 6
                                                                &kp RET  &kp SPACE  &kp LSHFT    &mo 3  &kp BSPC  &kp RSHFT
            >;

            label = "qwe";
        };

        game {
            bindings = <
&kp GRAVE  &kp N1    &kp N2    &kp N3  &kp N4  &kp N5  &none                                                   &none     &kp N6  &kp N7    &kp N8     &kp N9   &kp N0     &to 0
&kp TAB    &kp Q     &kp W     &kp E   &kp R   &kp T   &none                                                   &none     &kp Y   &kp U     &kp I      &kp O    &kp P      &kp BSLH
&kp BSPC   &kp A     &kp S     &kp D   &kp F   &kp G   &none                                                   &none     &kp H   &kp J     &kp K      &kp L    &kp SEMI   &kp SQT
&kp LSHFT  &kp Z     &kp X     &kp C   &kp V   &kp B                                                                     &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH   &kp RET
&kp LCTRL  &kp FSLH  &kp BSLH  &none   &mo 8                                                                                     &kp LEFT  &kp DOWN   &kp UP   &kp RIGHT  &none
                                                                        &kp DEL    &none      &none  &kp LGUI
                                                                                   &kp ESC    &mo 6
                                                              &kp LALT  &kp SPACE  &mo 3      &mo 4  &kp BSPC  &kp RALT
            >;

            label = "game";
        };

        sym {
            bindings = <
&trans  &trans     &trans         &trans            &trans     &trans       &trans                                            &trans    &trans     &trans                &trans                 &trans      &trans    &trans
&trans  &kp GRAVE  &kp LESS_THAN  &kp GREATER_THAN  &kp MINUS  &kp PIPE     &trans                                            &trans    &kp CARET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOLLAR  &kp BSLH  &trans
&trans  &kp EXCL   &kp ASTRK      &kp FSLH          &kp EQUAL  &kp AMPS     &trans                                            &kp CAPS  &kp HASH   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI    &kp DQT   &trans
&trans  &kp TILDE  &kp PLUS       &kp LBKT          &kp RBKT   &kp PERCENT                                                              &kp AT     &kp COLON             &kp COMMA              &kp DOT     &kp SQT   &kp LA(RIGHT_BRACKET)
&trans  &trans     &trans         &trans            &trans                                                                                         &trans                &trans                 &trans      &trans    &trans
                                                                                            &trans  &trans    &trans  &trans
                                                                                                    &trans    &trans
                                                                                    &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "sym";
        };

        raise {
            bindings = <
&kp LA(PRINTSCREEN)  &none                    &none       &none         &none            &none  &none                                       &none  &to 0  &none  &none  &none  &none  &to 2
&kp LG(LS(S))        &none                    &none       &bt BT_SEL 1  &bt BT_SEL 0     &none  &to 9                                       &none  &none  &none  &none  &none  &none  &none
&none                &none                    &ua_switch  &ru_switch    &colemak_switch  &none  &none                                       &none  &none  &none  &none  &none  &none  &none
&kp RA(F24)          &none                    &none       &none         &none            &none                                                     &none  &none  &none  &none  &none  &none
&kp RA(F23)          &sleep_behavior 0 LG(L)  &none       &none         &none                                                                             &none  &none  &none  &none  &none
                                                                                                              &none  &none    &none  &none
                                                                                                                     &none    &none
                                                                                                       &none  &none  &none    &none  &none  &none
            >;

            label = "ras";
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans  &trans        &trans     &trans     &trans     &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans  &trans        &kp HOME   &kp UP     &kp END    &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans  &kp LC(LEFT)  &kp LEFT   &kp DOWN   &kp RIGHT  &kp LC(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                                    &trans        &kp PG_DN  &kp PG_UP  &trans     &trans         &trans
&trans  &trans  &trans  &trans  &trans                                                                                          &trans     &trans     &trans     &trans         &trans
                                                                &trans  &trans            &trans  &trans
                                                                        &trans            &trans
                                                        &trans  &trans  &kp LEFT_SHIFT    &trans  &trans  &trans
            >;

            label = "nav";
        };

        fun {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6   &trans                                            &trans  &kp F7           &kp F8      &kp F9        &kp F10       &kp F11     &kp F12
&kp F13  &kp F14  &kp F15  &kp F16  &kp F17  &kp F18  &trans                                            &trans  &kp F19          &kp F20     &kp F21       &kp F22       &kp F23     &kp F24
&trans   &trans   &trans   &trans   &trans   &trans   &trans                                            &trans  &kp PRINTSCREEN  &kp C_PP    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  &trans
&trans   &trans   &trans   &trans   &trans   &trans                                                             &trans           &kp C_PREV  &kp C_RW      &kp C_FF      &kp C_NEXT  &trans
&trans   &trans   &trans   &trans   &trans                                                                                       &trans      &trans        &trans        &trans      &trans
                                                                      &trans  &trans    &trans  &trans
                                                                              &trans    &trans
                                                              &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "fun";
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans  &trans           &trans     &trans           &trans      &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans  &kp KP_SLASH     &kp KP_N7  &kp KP_N8        &kp KP_N9   &kp KP_MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                            &trans  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5        &kp KP_N6   &kp KP_PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                            &kp KP_NUM       &kp KP_N1  &kp KP_N2        &kp KP_N3   &kp KP_ENTER  &trans
&none   &trans  &trans  &trans  &trans                                                                                     &trans     &kp KP_NUMBER_0  &kp KP_DOT  &trans        &trans
                                                                &trans  &trans    &trans  &trans
                                                                        &trans    &trans
                                                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "num";
        };

        gnum {
            bindings = <
&kp KP_NUM       &trans           &trans           &trans           &trans        &trans  &trans                                            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp KP_SLASH     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &trans  &trans                                            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &trans  &trans                                            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp RA(F24)      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SQT       &trans                                                            &trans  &trans  &trans  &trans  &trans  &trans
&kp RA(F23)      &kp KP_NUMBER_0  &kp KP_DOT       &trans           &trans                                                                                  &trans  &trans  &trans  &trans  &trans
                                                                                                          &trans  &trans    &trans  &trans
                                                                                                                  &trans    &trans
                                                                                                  &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "gnum";
        };

        ble {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none                                             &none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none
&none         &none         &none         &none         &none         &none  &bootloader                                       &bootloader  &none         &none         &none         &none         &none         &none
&none         &none         &none         &none         &none         &none  &none                                             &none        &none         &none         &none         &none         &none         &to 0
&none         &none         &none         &none         &none         &none                                                                 &none         &none         &none         &none         &none         &none
&bt BT_CLR    &none         &none         &none         &none                                                                                             &none         &none         &none         &none         &bt BT_CLR
                                                                                                 &none  &none    &none  &none
                                                                                                        &none    &none
                                                                                          &none  &none  &none    &none  &none  &none
            >;

            label = "ble";
        };
    };
};
